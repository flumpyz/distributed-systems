version: "3.9"
services:
  main_1:
    build: main/.
#    ports:
#      - "8080:8000"
    depends_on:
      - db
    links:
      - db
    environment:
      DATABASE_URL: postgresql://postgres:root@db/PythonProj
      RABBITMQ_URL: amqp://myuser:myuserpassword@rabbit:5672/%2F
      NAME: main_1

  main_2:
    build: main/.
    #    ports:
    #      - "8080:8000"
    depends_on:
      - db
    links:
      - db
    environment:
      DATABASE_URL: postgresql://postgres:root@db/PythonProj
      RABBITMQ_URL: amqp://myuser:myuserpassword@rabbit:5672/%2F
      NAME: main_2

  loader:
    build: loader/.
    restart: on-failure
    depends_on:
      - rabbit
      - nginx
    links:
      - rabbit
      - nginx
    environment:
      RABBITMQ_URL: amqp://myuser:myuserpassword@rabbit:5672/%2F
      WEB_BASE_URL: http://nginx:80

  db:
    image: postgres:14.5
    restart: always
    ports:
      - "15432:5432"
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: postgres
      POSTGRES_DB: PythonProj
    volumes:
      - "dbdata:/var/lib/postgresql/data"

  rabbit:
    image: rabbitmq:management
    hostname: rabbit
    ports:
      - "15671:15671"
      - "15672:15672"
      - "5671:5671"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: myuser
      RABBITMQ_DEFAULT_PASS: myuserpassword
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
      interval: 30s
      timeout: 10s
      retries: 10

  nginx:
    build: nginx/.
    ports:
      - "8080:80"
    depends_on:
      - main_1
      - main_2
    links:
      - main_1
      - main_2
volumes:
  dbdata: